<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAE
        tQAABLUBypZCUAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAQESURBVFhHxVZp
        bExRFK4lEv6IxBZE+C2h05lR5c+o0nljOhWMpTpvplOtrZUUaQkxEwnaoINIbIk1QhdB7ESqQkOoEGsi
        aKgIsQaNtZ9z3ruveW1fZ0HrS77Mds/3nXfuvedMXDhYHb54i+RZbrHLRy2SXGORvLUWh3yCXkPWVDll
        mNvdTSz9t7DYfTbVUEYEPrdKnhybzdZVhP4d3G53F6skF+tNEp0+jHXPRWpGHjEfKdPmY3Ratj4J5uVE
        18x+QubPwOYkdEwTHe3KxqSsJcgpKkFgWyU2lFUhVF6N1btPIC+4GdPmLIVtyhx9EnWJ0qxBQi52WBye
        Uk1sHD0lG289eQPnn/3ChXq04oGapyhYsw0u32JYHV4tiZvmtNweQjJ6iD1XRJLJfOGqLTh2972hsZ7n
        6n4o1UmnJLR4s92zRshGDzrlVziYy55bVByVuUauUOH6PRg/Y4GWREOSUx4opCODAkwiEJP8S5Sys3Dd
        J+DOW2PTluSEM/ODtBU+tQqSXCTkI8Ns967gID7tvO/8RNdfAz8bgSsvjQ2NGNhaQbdlnpIAnYlLQj4y
        qKkc4aCxU+chSPvJYvWfVbY0CccdZ28hzbuoaRuEfGTQ4qscxPecrxqLffwWffk1Hrr2DJOzC7UEYE7J
        7SkswkNprxRgz1iIUEW1IvbpO3D7jbFRWyyrfYGps4uaEhg+wdNXWIQHLT7JAdzhVu86roi9agAefTA2
        aot7qh4g3d90Hb/HBYOdhUV4aA0oKc2PvMAmRYwP3+UYDiBz7d5TdBXz1PJL3ntCPjJ4qomslfZ6oOaJ
        oUE4nnn8lfpHCUY5s0QC8johHxk8UinoOQdyb+f2yh3OyKgtluw/A6dcoJW/0ZyamSDkowOPVBEMp7dA
        aa9tzYCW3H7qJqbPXYaRE9UmRKwQstGD5zkFVisCNFi4t3N7PXL3raEpk8vOT87mSS6/au6Qv4yc4Bkq
        ZGODScrqQyJ1ihCRD5QnP6B0uJ1nb+Mg3fOyG/XYXfVQOXC851x23ZMrpGquFJKxwzTeP4Ce4lqTGFWD
        2yt3OG4yU3IKkU7/EXjwaAdO8IvuPWi4BYRk7Ehyu7vzSCWhz81EjdlI/xkruew8gJr99jdJMGiy9WdR
        Hiwk2KAT/0G8z1et5Wmn6gV16zAufdZKhBLKscEkiyV/Du7tnBS97aR+YwytEmOcnoZ3xdZalJpA/IXS
        eK9Y0v5IdmUEdeYaOy4JpezNzTs2Cd5z1ex/JlFqmkH8qTOmkTkEqOjbkUnEe1UzXRKVvYHDRP4+lJAs
        lrYfWiURIh7tBewbzJ9Pi2Xti1ZJlPcDDg4AnZVqsaT90SwJfvqNIziZbPFzx4D3nExPEy+yORDX6Tf6
        FRUE9SygJAAAAABJRU5ErkJggg==
</value>
  </data>
</root>